function queryInPopup(a) {
    $queryResultContainer.classList.contains("unshow") && $queryResultContainer.classList.remove("unshow"), "" !== $input.value && ($queryResultContainer.innerHTML = "ψ(._. )>词典君正在翻译。。。"), a ? ($input.value = a, chrome.extension.sendMessage({
        queryWord: a,
        source: "popup",
        useHttps: useHttpsValue
    }, buildResult)) : chrome.extension.sendMessage({
        queryWord: $input.value,
        source: "popup",
        useHttps: useHttpsValue
    }, buildResult)
}

function buildVoice(a) {
    var b = a.getAttribute("data-src"),
    c = document.createElement("audio");
    c.setAttribute("src", b), a.appendChild(c), c.addEventListener("ended", function() {
        this.load()
    }), a.addEventListener("click", function() {
        c.play()
    })
}

function createLink(a, b) {
    a.addEventListener("click", function() {
        chrome.tabs.create({
            url: b
        })
    })
}

function totalHeight(a) {
    for (var b = document.getElementsByClassName(a), c = b.length, d = 0, e = 0; c > e; e++) d += b[e].scrollHeight;
        return d + 10
}
var $button = document.querySelector("#search"),
$input = document.querySelector("#query-word"),
$queryResultContainer = document.querySelector("#query-result"); - 1 !== window.navigator.platform.toLowerCase().indexOf("mac") && (document.querySelector("#ctrl-option").firstChild.nodeValue = "Command");
var buildResult = function(a) {
    var b = a,
    c = "";
    if ("query success" == b.validMessage) {
        c += b.titleBlock, void 0 !== b.basicBlock && (c += b.basicBlock), void 0 !== b.webBlock && (c += b.webBlock), $queryResultContainer.innerHTML = c;
        var d, e, f = document.querySelectorAll(".voice-container");
        for (d = 0, e = f.length; e > d; d++) buildVoice(f[d])
    } else $queryResultContainer.innerHTML = 20 == b.errorCode ? "<p>这段文字太长，词典君无能为力了（┬_┬） <br><br>试试短一点的吧~</p>" : 40 == b.errorCode ? "<p>对不起，这段文字太高深了，请饶过词典君吧（┬_┬）</p>" : "<p>词典君罢工啦（┬_┬）<br><br> 是不是网络不太好？<br><br> 稍后再试一次吧</p>"
};
$button.addEventListener("click", function() {
    queryInPopup()
}), $input.select();
$input.addEventListener("input", function() {
    if(realTimeQuery.checked){
        var a = $input.value;
        setTimeout(function() {
            $input.value === a && "" !== $input.value && queryInPopup()
        }, 500)
    }
});
$input.addEventListener("keyup", function(e) {
    if(!realTimeQuery.checked){
      if(e.which==13){
        console.log(realTimeQuery.checked);
        queryInPopup(this.value);
    }
}
});

var issue = document.querySelector("#issue"),
email = document.querySelector("#email"),
source = document.querySelector("#source"),
keySet = document.querySelector("#key-set"),
score = document.querySelector("#score");
createLink(email, "mailto:ververcpp@gmail.com"), createLink(source, "https://github.com/ververcpp/ChaZD"), createLink(issue, "https://github.com/ververcpp/ChaZD/issues/new"), createLink(keySet, "chrome://extensions/configureCommands"), createLink(score, "https://chrome.google.com/webstore/detail/chazd/nkiipedegbhbjmajlhpegcpcaacbfggp"), document.querySelector("#setting-button").addEventListener("click", function() {
    var a = document.getElementById("settings");
    a.classList.toggle("active"), a.style.height = a.classList.contains("active") ? blockHeight + "px" : 0
});
var blockHeight = totalHeight("top-menu") + totalHeight("sub-menu") + totalHeight("carved") + 32,
realTimeQuery = document.querySelector("#realTimeQuery"),
linkQuery = document.querySelector("#linkQuery"),
noSelect = document.querySelector("#noSelect"),
mouseSelect = document.querySelector("#mouseSelect"),
useCtrl = document.querySelector("#useCtrl"),
autoAudio = document.querySelector("#autoAudio"),
defaultUk = document.querySelector("#defaultUk"),
defaultUs = document.querySelector("#defaultUs"),
showPositionSide = document.querySelector("#showPositionSide"),
showPositionNear = document.querySelector("#showPositionNear"),
autoHide = document.querySelector("#autoHide"),
showDuration = document.querySelector("#showDuration"),
currentDuration = document.querySelector("#currentDuration"),
turnOffTips = document.querySelector("#turn-off-tips"),
tips = document.querySelector("#tips"),
toggleKey = document.querySelector("#toggle-key"),
useHttps = document.querySelector("#useHttps"),
useHttpsValue = !1;
chrome.storage.sync.get(null, function(a) {
    "" !== a.currentWord && queryInPopup(a.currentWord), a.realTimeQuery === !0 ? (realTimeQuery.checked = !0, realTimeQuery.nextSibling.classList.remove("unactive")) : (realTimeQuery.checked = !1, realTimeQuery.nextSibling.classList.add("unactive")), a.linkQuery === !0 ? (linkQuery.checked = !0, linkQuery.nextSibling.classList.remove("unactive")) : (linkQuery.checked = !1, linkQuery.nextSibling.classList.add("unactive")), a.useHttps === !0 ? (useHttps.checked = !0, useHttpsValue = !0, useHttps.nextSibling.classList.remove("unactive")) : (useHttps.checked = !1, useHttpsValue = !1, useHttps.nextSibling.classList.add("unactive")), a.autoAudio === !0 ? (autoAudio.checked = !0, autoAudio.nextSibling.classList.remove("unactive")) : (autoAudio.checked = !1, autoAudio.nextSibling.classList.add("unactive")), 1 === a.defaultVoice ? (defaultUk.checked = !0, defaultUk.nextSibling.classList.remove("unactive"), defaultUs.nextSibling.classList.add("unactive")) : 2 === a.defaultVoice && (defaultUs.checked = !0, defaultUs.nextSibling.classList.remove("unactive"), defaultUk.nextSibling.classList.add("unactive")), "noSelect" === a.selectMode && (noSelect.checked = !0, noSelect.nextSibling.classList.remove("unactive"), mouseSelect.nextSibling.classList.add("unactive"), useCtrl.nextSibling.classList.add("unactive"), toggleKey.disabled = !0, autoAudio.disabled = !0), "mouseSelect" === a.selectMode && (mouseSelect.checked = !0, mouseSelect.nextSibling.classList.remove("unactive"), noSelect.nextSibling.classList.add("unactive"), useCtrl.nextSibling.classList.add("unactive"), toggleKey.disabled = !0, autoAudio.disabled = !1), "useCtrl" === a.selectMode && (useCtrl.checked = !0, useCtrl.nextSibling.classList.remove("unactive"), noSelect.nextSibling.classList.add("unactive"), mouseSelect.nextSibling.classList.add("unactive"), toggleKey.disabled = !1, autoAudio.disabled = !1), a.showTips && tips.classList.remove("unshow"), "side" === a.showPosition ? (showPositionSide.checked = !0, showPositionSide.nextSibling.classList.remove("unactive"), showPositionNear.nextSibling.classList.add("unactive")) : "near" === a.showPosition && (showPositionNear.checked = !0, showPositionSide.nextSibling.classList.add("unactive"), showPositionNear.nextSibling.classList.remove("unactive")), "ctrl" === a.toggleKey ? toggleKey.selectedIndex = 0 : "alt" === a.toggleKey ? toggleKey.selectedIndex = 1 : "shift" === a.toggleKey && (toggleKey.selectedIndex = 2), a.autoHide === !0 ? (autoHide.checked = !0, autoHide.nextSibling.classList.remove("unactive"), showDuration.disabled = !1) : (autoHide.checked = !1, autoHide.nextSibling.classList.add("unactive"), showDuration.disabled = !0), currentDuration.innerHTML = showDuration.value = a.showDuration
}), realTimeQuery.addEventListener("click", function() {
    var a = realTimeQuery.checked;
    realTimeQuery.nextSibling.classList.toggle("unactive"), chrome.storage.sync.set({
        realTimeQuery: a
    }, function() {})
}), linkQuery.addEventListener("click", function() {
    var a = linkQuery.checked;
    linkQuery.nextSibling.classList.toggle("unactive"), chrome.storage.sync.set({
        linkQuery: a
    }, function() {})
}), useHttps.addEventListener("click", function() {
    var a = useHttps.checked;
    useHttps.nextSibling.classList.toggle("unactive"), chrome.storage.sync.set({
        useHttps: a
    })
}), autoAudio.addEventListener("click", function() {
    var a = autoAudio.checked;
    a ? autoAudio.nextSibling.classList.remove("unactive") : autoAudio.nextSibling.classList.add("unactive"), chrome.storage.sync.set({
        autoAudio: a
    }, function() {})
}), defaultUk.addEventListener("click", function() {
    defaultUk.nextSibling.classList.remove("unactive"), defaultUs.nextSibling.classList.add("unactive"), chrome.storage.sync.set({
        defaultVoice: 1
    }, function() {})
}), defaultUs.addEventListener("click", function() {
    defaultUs.nextSibling.classList.remove("unactive"), defaultUk.nextSibling.classList.add("unactive"), chrome.storage.sync.set({
        defaultVoice: 2
    }, function() {})
}), turnOffTips.addEventListener("click", function() {
    tips.classList.add("unshow"), chrome.storage.sync.set({
        showTips: !1
    }, function() {})
}), noSelect.addEventListener("click", function() {
    toggleKey.disabled = !0, autoAudio.disabled = !0, noSelect.nextSibling.classList.remove("unactive"), mouseSelect.nextSibling.classList.add("unactive"), useCtrl.nextSibling.classList.add("unactive"), chrome.storage.sync.set({
        selectMode: "noSelect"
    }, function() {})
}), mouseSelect.addEventListener("click", function() {
    toggleKey.disabled = !0, autoAudio.disabled = !1, noSelect.nextSibling.classList.add("unactive"), mouseSelect.nextSibling.classList.remove("unactive"), useCtrl.nextSibling.classList.add("unactive"), chrome.storage.sync.set({
        selectMode: "mouseSelect"
    }, function() {})
}), useCtrl.addEventListener("click", function() {
    toggleKey.disabled && (toggleKey.disabled = !1), autoAudio.disabled = !1, noSelect.nextSibling.classList.add("unactive"), mouseSelect.nextSibling.classList.add("unactive"), useCtrl.nextSibling.classList.remove("unactive"), chrome.storage.sync.set({
        selectMode: "useCtrl"
    }, function() {})
}), showPositionSide.addEventListener("click", function() {
    showPositionSide.nextSibling.classList.remove("unactive"), showPositionNear.nextSibling.classList.add("unactive"), chrome.storage.sync.set({
        showPosition: "side"
    }, function() {})
}), showPositionNear.addEventListener("click", function() {
    showPositionSide.nextSibling.classList.add("unactive"), showPositionNear.nextSibling.classList.remove("unactive"), chrome.storage.sync.set({
        showPosition: "near"
    }, function() {})
}), autoHide.addEventListener("click", function() {
    var a = autoHide.checked;
    a ? (autoHide.nextSibling.classList.remove("unactive"), showDuration.disabled = !1) : (autoHide.nextSibling.classList.add("unactive"), showDuration.disabled = !0), chrome.storage.sync.set({
        autoHide: a
    }, function() {})
}), showDuration.addEventListener("input", function() {
    currentDuration.innerHTML = showDuration.value, chrome.storage.sync.set({
        showDuration: showDuration.value
    }, function() {})
}), toggleKey.onchange = function() {
    chrome.storage.sync.set({
        toggleKey: this.value
    }, function() {})
};